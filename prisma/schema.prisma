
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


enum Langue {
  FR
  EN
  WO
}

enum TypeMedia {
  IMAGE
  VIDEO
  AUDIO
}

model Utilisateur {
  id              String   @id @default(uuid())  // Sans @db.Uuid
  nom             String
  email           String   @unique
  motDePasse      String
  languePreferee  Langue   @default(FR)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  favoris        Favori[]
  historique     Historique[]
  @@map("utilisateurs")
}



model Oeuvre {
  id           String          @id @default(uuid())
  titre        String
  qrCode       String       @unique @map("qr_code")
  imageUrl     String       @map("image_url")
  categorie    String
  artiste      String
  annee        Int
  localisation  String
  descriptions Description[]
  medias       Media[]
  favoris      Favori[]
  historique   Historique[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@map("oeuvres")
}

model Description {
  id       String    @id @default(uuid())
  oeuvreId String    @map("oeuvre_id")
  langue   Langue    @default(FR)
  texte    String @db.Text
  oeuvre   Oeuvre @relation(fields: [oeuvreId], references: [id], onDelete: Cascade)

  @@unique([oeuvreId, langue])
  @@map("descriptions")
}

model Media {
  id       String       @id @default(uuid())
  oeuvreId String       @map("oeuvre_id")
  type     TypeMedia
  url      String
  oeuvre   Oeuvre    @relation(fields: [oeuvreId], references: [id], onDelete: Cascade)

  @@map("medias")
}

model Favori {
  id            String         @id @default(uuid())
  utilisateurId String         @map("utilisateur_id")
  oeuvreId      String         @map("oeuvre_id")
  createdAt     DateTime    @default(now()) @map("created_at")
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id], onDelete: Cascade)
  oeuvre        Oeuvre      @relation(fields: [oeuvreId], references: [id], onDelete: Cascade)

  @@unique([utilisateurId, oeuvreId])
  @@map("favoris")
}

model Historique {
  id               String         @id @default(uuid())
  utilisateurId    String         @map("utilisateur_id")
  oeuvreId         String         @map("oeuvre_id")
  dateConsultation DateTime    @default(now()) @map("date_consultation")
  utilisateur     Utilisateur @relation(fields: [utilisateurId], references: [id], onDelete: Cascade)
  oeuvre           Oeuvre      @relation(fields: [oeuvreId], references: [id], onDelete: Cascade)

  @@map("historique")
}